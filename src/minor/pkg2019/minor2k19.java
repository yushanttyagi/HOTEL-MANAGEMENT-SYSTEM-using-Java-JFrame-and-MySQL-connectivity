/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package minor.pkg2019;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.Duration;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.table.DefaultTableModel;
import static minor.pkg2019.Minor2019.con;
import static minor.pkg2019.Minor2019.createcon;
import static minor.pkg2019.Minor2019.stdm;

/**
 *
 * @author Yushant Tyagi
 */
public class minor2k19 extends javax.swing.JFrame {
int x=0,y=100;
    /**
     * Creates new form minor2k19
     */
    public minor2k19() {
        initComponents();
        getContentPane().setLayout(new BorderLayout());
  
  
      getContentPane().add(BorderLayout.CENTER, new JScrollPane(jPanel1));
//  JFrame jj=new JFrame();
//jj.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
//jj.setSize(700,200);
//jj.add(new minor2k19());
//jj.setLocationRelativeTo(null);
//jj.setVisible(true);
//      
    }
static Connection con;static Statement stat;static PreparedStatement stdm;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        retr = new javax.swing.JButton();
        retriev = new javax.swing.JTextField();
        speci = new javax.swing.JButton();
        tname = new javax.swing.JTextField();
        spec = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        insert = new javax.swing.JButton();
        connect = new javax.swing.JButton();
        admin = new javax.swing.JTextField();
        pass = new javax.swing.JPasswordField();
        quer = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        output = new javax.swing.JTextArea();
        valone = new javax.swing.JTextField();
        valtwo = new javax.swing.JTextField();
        valthree = new javax.swing.JTextField();
        valfour = new javax.swing.JTextField();
        valfive = new javax.swing.JTextField();
        valsix = new javax.swing.JTextField();
        roomsins = new javax.swing.JButton();
        checkin = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        rbook = new javax.swing.JTextField();
        rtype = new javax.swing.JTextField();
        rfac = new javax.swing.JTextField();
        rroom = new javax.swing.JTextField();
        chinn = new javax.swing.JTextField();
        chott = new javax.swing.JTextField();
        sssn = new javax.swing.JTextField();
        clear = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tables = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("employee management system");
        setBackground(new java.awt.Color(102, 102, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        retr.setText("RETRIEVE");
        retr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retrActionPerformed(evt);
            }
        });

        retriev.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Table Name", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        retriev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retrievActionPerformed(evt);
            }
        });

        speci.setText("SPECIFIC");
        speci.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                speciActionPerformed(evt);
            }
        });

        tname.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Table Name", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        spec.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "QUERY", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jButton3.setText("DML COMM");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        insert.setText("customer");
        insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertActionPerformed(evt);
            }
        });

        connect.setText("connect database");
        connect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectActionPerformed(evt);
            }
        });

        admin.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Admin", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        admin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminActionPerformed(evt);
            }
        });

        pass.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Password", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        quer.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "QUERY", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        output.setColumns(20);
        output.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        output.setForeground(new java.awt.Color(0, 255, 0));
        output.setRows(5);
        output.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jScrollPane1.setViewportView(output);

        valone.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "SSN", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        valone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valoneActionPerformed(evt);
            }
        });

        valtwo.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "First Name", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        valtwo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valtwoActionPerformed(evt);
            }
        });

        valthree.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Last Name", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        valfour.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Phone No", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        valfive.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Address", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        valsix.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Mail ID", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        roomsins.setText("rooms");
        roomsins.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomsinsActionPerformed(evt);
            }
        });

        checkin.setText("checkin_out");
        checkin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkinActionPerformed(evt);
            }
        });

        jTextArea1.setBackground(new java.awt.Color(255, 153, 0));
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Monospaced", 1, 36)); // NOI18N
        jTextArea1.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea1.setRows(5);
        jTextArea1.setText("HOTEL MANAGEMENT SYSTEM");
        jScrollPane2.setViewportView(jTextArea1);

        rbook.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Booking No", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        rtype.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Type", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        rfac.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Facilities", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        rroom.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Room No", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        chinn.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Checkin Date", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        chott.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "CheckOut Date", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        sssn.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "SSN", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        clear.setText("clear rows");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        jButton1.setText("Close connection");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("exit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        tables.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ssn", "first", "last", "phone", "address", "email"
            }
        ));
        jScrollPane3.setViewportView(tables);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(connect, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
                        .addComponent(checkin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(retr, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(speci, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(roomsins, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(insert, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(145, 145, 145)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(valone, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(valtwo, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(valthree, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(valfour, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(rbook, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE)
                                .addGap(23, 23, 23)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(chott, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE)
                                    .addComponent(rtype)
                                    .addComponent(pass))))
                        .addGap(123, 123, 123)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(valfive, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(valsix, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(sssn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                                    .addComponent(rfac, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(18, 18, 18)
                                .addComponent(rroom, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(89, 89, 89))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(quer, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(tname)
                                        .addComponent(retriev, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE))
                                    .addGap(18, 18, 18)
                                    .addComponent(spec, javax.swing.GroupLayout.PREFERRED_SIZE, 533, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(admin, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
                                    .addComponent(chinn, javax.swing.GroupLayout.Alignment.LEADING))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 537, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(316, 316, 316))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 837, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                            .addComponent(clear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE))
                        .addGap(20, 20, 20))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(retr, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(retriev, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(speci, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(quer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(valone)
                    .addComponent(valtwo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(valthree, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(valfour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(valfive, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(valsix, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(insert, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(roomsins, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rbook, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(rtype, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(rfac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(rroom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkin, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chinn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chott, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sssn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(connect, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(admin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(253, 253, 253))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE))
                        .addGap(243, 243, 243))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setSize(new java.awt.Dimension(1280, 784));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void checkinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkinActionPerformed
        try{String chi=chinn.getText();
            String cho=chott.getText();

            SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");

            java.util.Date date = sdf1.parse(chi);
            java.sql.Date start = new java.sql.Date(date.getTime());

            java.util.Date date2 = sdf1.parse(cho);
            java.sql.Date end= new java.sql.Date(date2.getTime());
            LocalDate d1 = LocalDate.parse(chi, DateTimeFormatter.ISO_LOCAL_DATE);
            LocalDate d2 = LocalDate.parse(cho, DateTimeFormatter.ISO_LOCAL_DATE);
            Duration diff = Duration.between(d1.atStartOfDay(), d2.atStartOfDay());
            int diffDays =  (int) diff.toDays();
            int ssn=Integer.parseInt(sssn.getText());
            stdm=con.prepareStatement("insert into checkin_out values(?,?,?)");
            stdm.setDate(1,start);
            stdm.setDate(2,end);stdm.setInt(3,ssn);
            stdm.execute();
            //System.out.println("check out successful");
            int money=diffDays*3000;
            stdm=con.prepareStatement("insert into invoice values(?,?,?)");
            stdm.setInt(1,ssn);
            stdm.setInt(2,diffDays);
            stdm.setInt(3,money);
            stdm.execute();
            //System.out.println("invoice created");
            //output.setText("checkout success");
        } catch (SQLException ex) {
            Logger.getLogger(Minor2019.class.getName()).log(Level.SEVERE, null, ex);
        }   catch (ParseException ex) {
            Logger.getLogger(Minor2019.class.getName()).log(Level.SEVERE, null, ex);
        }
        output.setText("successfully inserted");
        // TODO add your handling code here:
    }//GEN-LAST:event_checkinActionPerformed

    private void roomsinsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomsinsActionPerformed
        try{int numb=Integer.parseInt(rbook.getText());
            String type=rtype.getText();
            String facili=rfac.getText();
            int room=Integer.parseInt(rroom.getText());

            PreparedStatement stst=con.prepareStatement("insert into rooms values(?,?,?,?)");
            stst.setInt(1, numb);
            stst.setString(2,type);
            stst.setString(3,facili);
            stst.setInt(4,room);stst.execute();
        } catch (SQLException ex) {
            Logger.getLogger(minor2k19.class.getName()).log(Level.SEVERE, null, ex);
        }
        output.setText("successfully inserted");
        // TODO add your handling code here:
    }//GEN-LAST:event_roomsinsActionPerformed

    private void valoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_valoneActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        JFrame f=new JFrame();
        //f.addWindowListener((WindowListener) minor2k19.this);
        f.setSize(300,300);f.setLayout(null);f.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);f.setVisible(true);
        int a=JOptionPane.showConfirmDialog(f,"SURE??");
        if(a==JOptionPane.YES_OPTION){f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);System.exit(0); }
        else if(a==JOptionPane.NO_OPTION){f.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);}
        else{f.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);}
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        // TODO add your handling code here:
        tables.getColumnModel().getColumn(0).setHeaderValue("Null");
        tables.getColumnModel().getColumn(1).setHeaderValue("Null");
        tables.getColumnModel().getColumn(2).setHeaderValue("Null");
        tables.getColumnModel().getColumn(3).setHeaderValue("Null");
        tables.getColumnModel().getColumn(4).setHeaderValue("Null");
        tables.getColumnModel().getColumn(5).setHeaderValue("Null");
                    tables.getTableHeader().resizeAndRepaint();
        DefaultTableModel model=(DefaultTableModel) tables.getModel();
                    model.setRowCount(0);
    }//GEN-LAST:event_clearActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        closecon();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void adminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_adminActionPerformed

    private void connectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectActionPerformed
        // TODO add your handling code here:
        String pwd=new String(pass.getPassword());
        createcon(admin.getText(),pwd);
    }//GEN-LAST:event_connectActionPerformed

    private void insertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertActionPerformed
        //String table=(tname.getText());
        //if(table.equals("customer")){
            try{int ssn=Integer.parseInt(valone.getText());
                String first=valtwo.getText();String last=valthree.getText();
                String numb=valfour.getText();
                String addr=valfive.getText();
                String email=valsix.getText();

                PreparedStatement stst=con.prepareStatement("insert into customer values(?,?,?,?,?,?)");
                stst.setInt(1, ssn);
                stst.setString(2,first);
                stst.setString(3, last);
                stst.setString(4,numb);
                stst.setString(5,addr);
                stst.setString(6,email);
                stst.execute();
            } catch (SQLException ex) {
                Logger.getLogger(minor2k19.class.getName()).log(Level.SEVERE, null, ex);
            }
            output.setText("successfully inserted");
            
    }//GEN-LAST:event_insertActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        rundml();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void speciActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_speciActionPerformed
        // TODO add your handling code here:
        runquery();
    }//GEN-LAST:event_speciActionPerformed

    private void retrievActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retrievActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_retrievActionPerformed

    private void retrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retrActionPerformed
        retrieve(retriev.getText());

        // TODO add your handling code here:
    }//GEN-LAST:event_retrActionPerformed

    private void valtwoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valtwoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_valtwoActionPerformed

    /**
     * @param args the command line arguments
     */
    void rundml(){
        String query=quer.getText();
            try{
            stdm=con.prepareStatement(query);
                stdm.executeUpdate();
                JOptionPane.showMessageDialog(new JFrame(),"Successfully Executed");
        } catch (SQLException ex) {
            Logger.getLogger(Minor2019.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    void runquery(){
        
        String ch,query;
        ch=tname.getText();
        query=spec.getText();
                if(ch.equals("invoice")){
                  try{
             String out="";
                Statement stat=con.createStatement();
                ResultSet rs=stat.executeQuery(query);
                tables.getColumnModel().getColumn(0).setHeaderValue("Checkin Date");
                    tables.getColumnModel().getColumn(1).setHeaderValue("Checkout Date");
                    tables.getColumnModel().getColumn(2).setHeaderValue("SSN");
                                        tables.getColumnModel().getColumn(3).setHeaderValue("Null");
                    tables.getColumnModel().getColumn(4).setHeaderValue("Null");
                    tables.getColumnModel().getColumn(5).setHeaderValue("Null");

                    tables.getTableHeader().resizeAndRepaint();

                      DefaultTableModel model=(DefaultTableModel) tables.getModel();
                      model.setRowCount(0);
        Object[] row=new Object[3];
                    while(rs.next()){
                        //java.sql.Date chin=rs.getDate("chin");
                        //java.sql.Date chout=rs.getDate("chout");
                        //int ssn=rs.getInt("ssn");
                        row[0]=rs.getDate("chin");
                        row[1]=rs.getDate("chout");
                        row[2]=rs.getInt("ssn");
                        model.addRow(row);
                    }
        } catch (SQLException ex) {
            Logger.getLogger(Minor2019.class.getName()).log(Level.SEVERE, null, ex);
        }
               }
                else if(ch.equals("customer")){
try{
                         String out="";

                stat=con.createStatement();
                ResultSet rs=stat.executeQuery(query);
                tables.getColumnModel().getColumn(0).setHeaderValue("SSN");
                    tables.getColumnModel().getColumn(1).setHeaderValue("First Name");
                    tables.getColumnModel().getColumn(2).setHeaderValue("Last Name");
                    tables.getColumnModel().getColumn(3).setHeaderValue("Ph No");
                    tables.getColumnModel().getColumn(4).setHeaderValue("Address");
                    tables.getColumnModel().getColumn(5).setHeaderValue("Email");
                    tables.getTableHeader().resizeAndRepaint();
                DefaultTableModel model=(DefaultTableModel) tables.getModel();
                 model.setRowCount(0);
        Object[] row=new Object[6];
        while(rs.next()){
            row[0]=rs.getInt("ssn");
            row[1]=rs.getString("first_name");
            row[2]=rs.getString("last_name");
            row[3]=rs.getString("ph_no");
            row[4]=rs.getString("address");
            row[5]=rs.getString("email");
            model.addRow(row);
                }//con.close();
        }catch (SQLException ex) {
            Logger.getLogger(Minor2019.class.getName()).log(Level.SEVERE, null, ex);
        }                }
                else if(ch.equals("rooms")){
                  try{
                      String out="";

                stat=con.createStatement();
                    ResultSet rs=stat.executeQuery(query);
                    tables.getColumnModel().getColumn(0).setHeaderValue("Booking No");
                    tables.getColumnModel().getColumn(1).setHeaderValue("Type");
                    tables.getColumnModel().getColumn(2).setHeaderValue("Facilities");
                    tables.getColumnModel().getColumn(3).setHeaderValue("Room_no");
                    tables.getColumnModel().getColumn(4).setHeaderValue("Null");
                    tables.getColumnModel().getColumn(5).setHeaderValue("Null");
                    tables.getTableHeader().resizeAndRepaint();
                    DefaultTableModel model=(DefaultTableModel) tables.getModel();
                    model.setRowCount(0);
        Object[] row=new Object[4];
                    while(rs.next()){
                        row[0]=rs.getInt("booking_no");
            row[1]=rs.getString("type");
            row[2]=rs.getString("facilities");
            row[3]=rs.getInt("room_no");
                                    model.addRow(row);

                    }
        } catch (SQLException ex) {
            Logger.getLogger(Minor2019.class.getName()).log(Level.SEVERE, null, ex);
        } 
                }
                else{
                   try{
                          String out="";

                Statement stat=con.createStatement();
                    ResultSet rs=stat.executeQuery(query);
                    tables.getColumnModel().getColumn(0).setHeaderValue("SSN");
                    tables.getColumnModel().getColumn(1).setHeaderValue("Days Stayed");
                    tables.getColumnModel().getColumn(2).setHeaderValue("Total");
                    tables.getColumnModel().getColumn(3).setHeaderValue("Null");
                    tables.getColumnModel().getColumn(4).setHeaderValue("Null");
                    tables.getColumnModel().getColumn(5).setHeaderValue("Null");

                    tables.getTableHeader().resizeAndRepaint();
                  DefaultTableModel model=(DefaultTableModel) tables.getModel();
                  model.setRowCount(0);
        Object[] row=new Object[3];
                while(rs.next()){
                    row[0]=rs.getInt("ssn");
                    row[1]=rs.getInt("days");
                    row[2]=rs.getInt("total");
                    model.addRow(row);

                     }

                    //con.close();
        } catch (SQLException ex) {
            Logger.getLogger(Minor2019.class.getName()).log(Level.SEVERE, null, ex);
        }
                }
    }
     void createcon(String a,String b){
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
                con=DriverManager.getConnection("jdbc:mysql://localhost:3306/minor",a,b);
                JOptionPane.showMessageDialog(new JFrame(),"SUCCESSFULLY CONNECTED");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Minor2019.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Minor2019.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
     void closecon(){try {
         con.close();output.setText(""); 
         JOptionPane.showMessageDialog(new JFrame(),"SUCCESSFULLY CLOSED THE CONNECTION");
        } catch (SQLException ex) {
            Logger.getLogger(minor2k19.class.getName()).log(Level.SEVERE, null, ex);
        }
    
}
         void retrieve(String ch){
        
                if(ch.equals("invoice")){
                  table3();
               }
                else if(ch.equals("customer")){
                  table1();  
                }
                else if(ch.equals("rooms")){
                  table2();  
                }
                else if(ch.equals("checkin_out")){
                  table4(); 
                }
     }
    
     void table1(){
        try{
            
                stat=con.createStatement();
                tables.getColumnModel().getColumn(0).setHeaderValue("SSn");
                    tables.getColumnModel().getColumn(1).setHeaderValue("First_name");
                    tables.getColumnModel().getColumn(2).setHeaderValue("Last_name");
                    tables.getColumnModel().getColumn(3).setHeaderValue("phone no");
                    tables.getColumnModel().getColumn(4).setHeaderValue("address");
                    tables.getColumnModel().getColumn(5).setHeaderValue("email");
                    tables.getTableHeader().resizeAndRepaint();
                ResultSet rs=stat.executeQuery("select * from customer");String out = "";
                 DefaultTableModel model=(DefaultTableModel) tables.getModel();
                 model.setRowCount(0);
        Object[] row=new Object[6];
        while(rs.next()){
            row[0]=rs.getInt("ssn");
            row[1]=rs.getString("first_name");
            row[2]=rs.getString("last_name");
            row[3]=rs.getString("ph_no");
            row[4]=rs.getString("address");
            row[5]=rs.getString("email");
            model.addRow(row);
                }//con.close();
        }catch (SQLException ex) {
            Logger.getLogger(Minor2019.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
     void table2(){
        try{
         
                stat=con.createStatement();String out ="";
                //String[] columns={"booking no","type","facilities","room no"};
                    ResultSet rs=stat.executeQuery("select * from rooms");
                    //DefaultTableModel model=new DefaultTableModel(columns,0);
                    tables.getColumnModel().getColumn(0).setHeaderValue("Booking No");
                    tables.getColumnModel().getColumn(1).setHeaderValue("Type");
                    tables.getColumnModel().getColumn(2).setHeaderValue("Facilities");
                    tables.getColumnModel().getColumn(3).setHeaderValue("Room_no");
                    tables.getColumnModel().getColumn(4).setHeaderValue("Null");
                    tables.getColumnModel().getColumn(5).setHeaderValue("Null");
                    tables.getTableHeader().resizeAndRepaint();
                    DefaultTableModel model=(DefaultTableModel) tables.getModel();
                    model.setRowCount(0);
        Object[] row=new Object[4];
                    while(rs.next()){
                        row[0]=rs.getInt("booking_no");
            row[1]=rs.getString("type");
            row[2]=rs.getString("facilities");
            row[3]=rs.getInt("room_no");
                                    model.addRow(row);

                    }
                    //con.close();
        } catch (SQLException ex) {
            Logger.getLogger(Minor2019.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
     void table3(){
        try{
             String out ="";
                stat=con.createStatement();
                ResultSet rs=stat.executeQuery("select * from invoice");
                tables.getColumnModel().getColumn(0).setHeaderValue("SSN");
                    tables.getColumnModel().getColumn(1).setHeaderValue("Days Stayed");
                    tables.getColumnModel().getColumn(2).setHeaderValue("Total");
                    tables.getColumnModel().getColumn(3).setHeaderValue("Null");
                    tables.getColumnModel().getColumn(4).setHeaderValue("Null");
                    tables.getColumnModel().getColumn(5).setHeaderValue("Null");

                    tables.getTableHeader().resizeAndRepaint();
                  DefaultTableModel model=(DefaultTableModel) tables.getModel();
                  model.setRowCount(0);
        Object[] row=new Object[3];
                while(rs.next()){
                    row[0]=rs.getInt("ssn");
                    row[1]=rs.getInt("days");
                    row[2]=rs.getInt("total");
                    model.addRow(row);

                     }//con.close();
                                    

        } catch (SQLException ex) {
            Logger.getLogger(Minor2019.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
     void table4(){
        try{
             
                stat=con.createStatement();String out ="";

                    ResultSet rs=stat.executeQuery("select * from checkin_out");
                         tables.getColumnModel().getColumn(0).setHeaderValue("Checkin Date");
                    tables.getColumnModel().getColumn(1).setHeaderValue("Checkout Date");
                    tables.getColumnModel().getColumn(2).setHeaderValue("SSN");
                                        tables.getColumnModel().getColumn(3).setHeaderValue("Null");
                    tables.getColumnModel().getColumn(4).setHeaderValue("Null");
                    tables.getColumnModel().getColumn(5).setHeaderValue("Null");

                    tables.getTableHeader().resizeAndRepaint();

                      DefaultTableModel model=(DefaultTableModel) tables.getModel();
                      model.setRowCount(0);
        Object[] row=new Object[3];
                    while(rs.next()){
                        //java.sql.Date chin=rs.getDate("chin");
                        //java.sql.Date chout=rs.getDate("chout");
                        //int ssn=rs.getInt("ssn");
                        row[0]=rs.getDate("chin");
                        row[1]=rs.getDate("chout");
                        row[2]=rs.getInt("ssn");
                        model.addRow(row);
                    }

                    //con.close();
        } catch (SQLException ex) {
            Logger.getLogger(Minor2019.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
     /*public void paint(Graphics g){
         super.paint(g);
         Graphics2D g2=(Graphics2D) g;
         Font font=new Font("Tahoma",Font.BOLD+Font.PLAIN,100);
         g2.setFont(font);
         g2.setColor(Color.red);
         g2.drawString("hello",0,100);
         try{Thread.sleep(100);}catch(Exception ex){ex.printStackTrace();}
         x+=10;
         if(x>this.getWidth()){
             x=0;
         }
         repaint();
     }*/
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
            
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(minor2k19.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(minor2k19.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(minor2k19.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(minor2k19.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new minor2k19().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField admin;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton checkin;
    private javax.swing.JTextField chinn;
    private javax.swing.JTextField chott;
    private javax.swing.JButton clear;
    private javax.swing.JButton connect;
    private javax.swing.JButton insert;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea output;
    private javax.swing.JPasswordField pass;
    private javax.swing.JTextField quer;
    private javax.swing.JTextField rbook;
    private javax.swing.JButton retr;
    private javax.swing.JTextField retriev;
    private javax.swing.JTextField rfac;
    private javax.swing.JButton roomsins;
    private javax.swing.JTextField rroom;
    private javax.swing.JTextField rtype;
    private javax.swing.JTextField spec;
    private javax.swing.JButton speci;
    private javax.swing.JTextField sssn;
    private javax.swing.JTable tables;
    private javax.swing.JTextField tname;
    private javax.swing.JTextField valfive;
    private javax.swing.JTextField valfour;
    private javax.swing.JTextField valone;
    private javax.swing.JTextField valsix;
    private javax.swing.JTextField valthree;
    private javax.swing.JTextField valtwo;
    // End of variables declaration//GEN-END:variables
}
